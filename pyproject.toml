[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "locust-grasshopper"
version = "1.3.20" # Managed by bump2version
readme = {file = "README.md", content-type = "text/markdown"}
description = "a load testing tool extended from locust"
classifiers = [
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Operating System :: OS Independent",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "Topic :: Software Development :: Testing",
    "Topic :: Software Development :: Testing :: Traffic Generation",
    "Topic :: System :: Distributed Computing",
    "Framework :: Pytest"
]

authors = [
    {name="Alteryx, Inc.", email="open_source_support@alteryx.com"}
]
maintainers = [
    {name="Alteryx, Inc.", email="open_source_support@alteryx.com"}
]
keywords = ["load testing", "performance", "locust", "grasshopper"]
license = {file = "LICENSE"}
requires-python = ">=3.10,<4"
dependencies = [
    "gevent ~=24.2.1",
    "influxdb ~= 5.3.1",
    "locust ~= 2.23.1",
    "locust-influxdb-listener ~= 1.0.2",
    "pytest ~= 6.2.5",
    "pyyaml >= 5.4.1",
    "tag-matcher ~= 0.0.5",
    "termcolor ~= 1.1.0",
]

[project.optional-dependencies]
dev = [
	# Testing stuff	
	"assertpy==1.1",
    "pytest-cov==4.0.0",
	"pytest-mock==3.10.0",
	"requests-mock==1.11.0",
	"tox==4.13.0",

	# Linting and formatting
    "ruff==0.2.2",
]

[project.urls]
"repository" = "https://github.com/alteryx/locust-grasshopper"

[tool.setuptools.packages.find]
where = ["src"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-rap --junitxml=reports/junit_test_results.xml --cov=src --cov-report=html --cov-report=xml --cov-report=term"
testpaths = [
    "tests/unit",
]
junit_suite_name = "locust-grasshopper"
log_level = "INFO"
xfail_strict = "True"
log_cli = "True"
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)s] %(module)s:%(filename)s:%(lineno)s %(message)s"
log_file = "tests.log"
log_file_level = "DEBUG"
log_file_format = "%(asctime)s [%(levelname)s] %(module)s:%(filename)s:%(lineno)s %(message)s"
log_file_date_format = "%m-%d-%Y %H:%M:%S"

[tool.tox]
legacy_tox_ini = """
    [tox]
    min_version = 4.0
    env_list =
        py310
        py311
        py312

    [testenv]
    deps = .[dev]
    commands = pytest tests/unit
"""

[tool.ruff]
exclude = ["data-files", "docs", ".git", "__pycache__", "venv"]
src = ["src/*", "tests/unit/*"]
show-fixes = true
line-length = 88

[tool.ruff.lint]

# Adds Pyflakes, Mccabe, Pydocstyle, etc. run `ruff linter` to see all available linters
extend-select = ["F", "C90", "I", "N", "ICN"]
ignore = [ "N801", "N803", "N806", "N815", "N818", "E721"]

# Allows a single underscore to be an unused variable
dummy-variable-rgx = "^_$"

[tool.ruff.lint.mccabe]
max-complexity = 18

[tool.ruff.format]

[tool.ruff.lint.isort]
# order-by-type = false
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"
ignore-decorators = ["property", "pytest.fixture", "locator"]



