---
stages:
- python_test  # executes lint jobs included from automation/gitlab-jobs project
- unit
- sonarqube
- publish  # publish package to artifactory (includes automatic version bump)

include:
- project: automation/gitlab-jobs
  ref: v1.3.1
  file: /python_standards.yml

unit-tests:
  image: python:3.9.12
  stage: unit
  tags:
  - linux-docker
  variables:
    LOG_FILE_LEVEL: debug
    LOG_CLI_LEVEL: error
    LOG_FILE_NAME: log-$CI_JOB_ID.log
    PYTEST_TARGET: tests/unit
  script:
  - pip install -r requirements.txt
  - pip install -r requirements-dev.txt
  - pip install -e .
  - coverage run -a -m pytest $PYTEST_TARGET
    --log-file=$CI_PROJECT_DIR/$LOG_FILE_NAME
    --log-file-level $LOG_FILE_LEVEL
    --log-cli-level $LOG_CLI_LEVEL
    --tb=short
    --junit-xml=report-$CI_JOB_ID.xml
  - coverage report --omit="*/tests/*"
  - coverage xml -i --omit="*/tests/*"

  artifacts:
    when: always
    paths:
      - $CI_PROJECT_DIR/$LOG_FILE_NAME
      - $CI_PROJECT_DIR/.coverage
      - $CI_PROJECT_DIR/coverage.xml
    reports:
      junit: $CI_PROJECT_DIR/report-$CI_JOB_ID.xml

sonarqube-check:
    stage: sonarqube
    tags:
        - linux-docker
    image:
        name: sonarsource/sonar-scanner-cli:latest
    variables:
        GIT_DEPTH: 0
        SONAR_HOST_URL: https://sonarqube.prod.build.devops.alteryx.com
        SONAR_TOKEN: grasshopper
    script:
        - sonar-scanner -Dproject.settings=sonarqube/sonar-scanner.properties -Dsonar.qualitygate.wait=true
    allow_failure: true

publish-package:
  stage: publish
  rules:
    - if: '$DO_PUBLISH == "true"'
    - if: '$CI_COMMIT_REF_NAME == "main"'
  variables:
    GIT_AUTHOR_NAME: "GitLab-CI"
    GIT_AUTHOR_EMAIL: "gitlab-noreply@alteryx.com"
  tags:
    - linux-docker
  image: $CI_REGISTRY/docker-images/python-lint:latest
  before_script:
    - git config --global user.email ${GIT_AUTHOR_EMAIL}
    - git config --global user.name ${GIT_AUTHOR_NAME}
    - git remote add project_origin https://oauth2:${GITLAB_ACCESS_TOKEN}@git.alteryx.com/qualityengineering/frameworks/grasshopper.git
  script:
    - pip install bumpversion twine build
    - rm -rf dist
    - bumpversion patch
    - python3 -m build
    - python3 -m twine upload
        --config-file .pypirc -r local -u $ARTIFACTORY_USERNAME
        -p $ARTIFACTORY_PASSWORD dist/* --verbose
    - git push project_origin HEAD:$CI_COMMIT_REF_NAME && git push project_origin -o ci.skip --tags

